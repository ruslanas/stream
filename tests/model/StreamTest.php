<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-03-25 at 14:36:33.
 */

class StreamTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Stream
     */
    protected $stream;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->app = App::getInstance();
        $this->app->loadConfig();
        $this->app->connect('test_stream');
        $this->stream = new Stream($this->app->pdo);
    }

    public function testStream() {
        $stream = new Stream($this->app->pdo);
        $this->assertInstanceOf('Stream', $stream);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Stream::getList
     */
    public function testGetList()
    {
        $res = $this->stream->getList();
        $this->assertArrayHasKey('title', $res[0]);
    }

    /**
     * @covers Stream::delete
     */
    public function testDelete()
    {
        $id = $this->stream->save(NULL, [
            'title' => 'Foo',
            'body' => 'Bar',
            'ignore_this_column' => 'Ignored' 
        ]);
        $res = $this->stream->getList();
        $this->assertEquals(sizeof($res), 2);
        $this->stream->delete($id);
        $res = $this->stream->getList();
        $this->assertEquals(sizeof($res), 1);
    }

    /**
     * @covers Stream::save
     */
    public function testSave()
    {
        $data = [
            'title' => 'Foo',
            'body' => 'Bar'
        ];
        $id = $this->stream->save(NULL, $data);
        $res = $this->stream->getById($id);
        $this->assertEquals($res['title'], 'Foo');
        $this->assertEquals($res['body'], 'Bar');
        $data['title'] = 'baz';
        $newId = $this->stream->save($id, $data);
        $this->assertEquals($id, $newId);
        $res = $this->stream->getById($id);
        $this->assertEquals($res['title'],'baz');
        $this->stream->delete($id);
    }

    /**
     * @covers Stream::getById
     */
    public function testGetById()
    {
        $message = $this->stream->getById(1);
        $this->assertEquals($message['title'], 'Test');
    }
}
